<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= accountName %> フォロワー | Analytics
  </title>
  <!-- Date Range Picker -->
  <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
  <!-- Moment.js -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.js"></script>
  <!-- CSS -->
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>

  <section id="header" class="container">

    <h1 class="bgcolor-white">
      アカウント名：<%= accountName %>
    </h1>

  </section>

  <section id="printNum" class="container">

    <div class="flex">
      <h3 class="sectionTitleEn">
        Total Feed Post
      </h3>
      <p class="sectionTitleJa">投稿数</p>
      <p class="countNum" id="postNowNum">
        <!-- <%= post.nowNum%> -->
      </p>
      <p class="previousMonthOver">前月比 : <%= post.previousMonthOverNum%>
      </p>
    </div>

    <div class="flex">
      <h3 class="sectionTitleEn">
        Follower
      </h3>
      <p class="sectionTitleJa">現在のフォロワー数</p>
      <p class="countNum" id="followerNowNum">
        <!-- <%= follower.nowNum%> -->
      </p>
      <p class="previousMonthOver">前月比 : <%= follower.previousMonthOverNum%>
      </p>
    </div>

    <script>
      const postNowNum = document.getElementById("postNowNum");
      const followerNowNum = document.getElementById("followerNowNum");

      const URL = "http://localhost:3000/api/v1/activity/get-num"
      const postData = { "accountName": "test_t.saku" };
      fetch(URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(postData),
      })
        .then(response => response.json())
        .then(data => {
          console.log(data);
          // 取得したデータをもとに書き換える
          postNowNum.textContent = data.postNowNum;
          followerNowNum.textContent = data.followerNowNum;
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    </script>

    <div class="flex">
      <h3 class="sectionTitleEn">
        Likes
      </h3>
      <p class="sectionTitleJa">いいね数の平均</p>
      <p class="countNum">
        <%= likes.nowNum%>
      </p>
      <p class="previousMonthOver">前月比 : <%= likes.previousMonthOverNum%>
      </p>
    </div>

    <div class="flex">
      <h3 class="sectionTitleEn">
        Comment
      </h3>
      <p class="sectionTitleJa">コメント数の平均</p>
      <p class="countNum">
        <%= comment.nowNum%>
      </p>
      <p class="previousMonthOver">前月比 : <%= comment.previousMonthOverNum%>
      </p>
    </div>

    <div class="flex">
      <h3 class="sectionTitleEn">
        Engagement
      </h3>
      <p class="sectionTitleJa">エンゲージメント率</p>
      <p class="countNum">
        <%= engagement.nowNum%> <span class="spanPercent">%</span>
      </p>
      <p class="previousMonthOver">前月比 : <%= engagement.previousMonthOverNum%>
      </p>
    </div>

  </section>

  <section id="chart" class="container">
    <!-- 日付け選択 -->
    <div class="inputDate">
      <input type="text" id="daterange" name="daterange" />
    </div>
    <script>
      $(function () {
        $('input[name="daterange"]').daterangepicker({
          opens: 'right',
          format: "YYYY-MM-DD",
          showWeekNumbers: true
        }, function (start, end, label) {
          const startDate = start.format('YYYY-MM-DD');
          const endDate = end.format('YYYY-MM-DD');

          // 開始日と終了日をfetch.postする
          const postData = { "startDate": startDate, "endDate": endDate };
          const URL = "http://localhost:3000/api/v1/activity";
          fetch(URL, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(postData),
          })
            .then(response => response.json())
            .then(data => {
              console.log(data.labelsDateArray);
              // すでにグラフがあったら消す
              if (myChart) {
                myChart.destroy();
              }
              lineChart(data.labelsDateArray);
            })
            .catch((error) => {
              console.error('Error:', error);
            });
        });
      });
    </script>
    <!-- グラフ -->
    <h3 class="sectionTitleEn">Followers Activity</h3>
    <p class="sectionTitleJa">フォロワーの推移</p>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.3.0/chart.js"
      integrity="sha512-jRQOiy89ZX0kVR/VpJd8PP4hPofcuYlfPU9MhPzHFIB19QAzCO7myRcO0Dgycu4iANZdnmXZ5sa/dL60y7BZgw=="
      crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <canvas id="myChart">
      <script src="/js/line-chart.js"></script>
      <script>
        let oneWeek = []
        for (let i = -7; i <= 0; i++) {
          oneWeek.push(moment().add(i, 'days').format('YYYY-MM-DD'));
        }
        lineChart(oneWeek);
      </script>
    </canvas>
  </section>

</body>

</html>